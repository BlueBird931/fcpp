// Copyright © 2020 Luigi Rapetta. All Rights Reserved.

#include <cstddef>

#include "lib/graphics/shapes.h"


const float fcpp::internal::Shapes::VERTEX_CUBE[216] = {
    // positions           // normals         
    -0.5f, -0.5f, -0.5f,   0.0f,  0.0f, -1.0f,
     0.5f, -0.5f, -0.5f,   0.0f,  0.0f, -1.0f,
     0.5f,  0.5f, -0.5f,   0.0f,  0.0f, -1.0f,
     0.5f,  0.5f, -0.5f,   0.0f,  0.0f, -1.0f,
    -0.5f,  0.5f, -0.5f,   0.0f,  0.0f, -1.0f,
    -0.5f, -0.5f, -0.5f,   0.0f,  0.0f, -1.0f,

    -0.5f, -0.5f,  0.5f,   0.0f,  0.0f,  1.0f,
     0.5f, -0.5f,  0.5f,   0.0f,  0.0f,  1.0f,
     0.5f,  0.5f,  0.5f,   0.0f,  0.0f,  1.0f,
     0.5f,  0.5f,  0.5f,   0.0f,  0.0f,  1.0f,
    -0.5f,  0.5f,  0.5f,   0.0f,  0.0f,  1.0f,
    -0.5f, -0.5f,  0.5f,   0.0f,  0.0f,  1.0f,

    -0.5f,  0.5f,  0.5f,  -1.0f,  0.0f,  0.0f,
    -0.5f,  0.5f, -0.5f,  -1.0f,  0.0f,  0.0f,
    -0.5f, -0.5f, -0.5f,  -1.0f,  0.0f,  0.0f,
    -0.5f, -0.5f, -0.5f,  -1.0f,  0.0f,  0.0f,
    -0.5f, -0.5f,  0.5f,  -1.0f,  0.0f,  0.0f,
    -0.5f,  0.5f,  0.5f,  -1.0f,  0.0f,  0.0f,

     0.5f,  0.5f,  0.5f,   1.0f,  0.0f,  0.0f,
     0.5f,  0.5f, -0.5f,   1.0f,  0.0f,  0.0f,
     0.5f, -0.5f, -0.5f,   1.0f,  0.0f,  0.0f,
     0.5f, -0.5f, -0.5f,   1.0f,  0.0f,  0.0f,
     0.5f, -0.5f,  0.5f,   1.0f,  0.0f,  0.0f,
     0.5f,  0.5f,  0.5f,   1.0f,  0.0f,  0.0f,

    -0.5f, -0.5f, -0.5f,   0.0f, -1.0f,  0.0f,
     0.5f, -0.5f, -0.5f,   0.0f, -1.0f,  0.0f,
     0.5f, -0.5f,  0.5f,   0.0f, -1.0f,  0.0f,
     0.5f, -0.5f,  0.5f,   0.0f, -1.0f,  0.0f,
    -0.5f, -0.5f,  0.5f,   0.0f, -1.0f,  0.0f,
    -0.5f, -0.5f, -0.5f,   0.0f, -1.0f,  0.0f,

    -0.5f,  0.5f, -0.5f,   0.0f,  1.0f,  0.0f,
     0.5f,  0.5f, -0.5f,   0.0f,  1.0f,  0.0f,
     0.5f,  0.5f,  0.5f,   0.0f,  1.0f,  0.0f,
     0.5f,  0.5f,  0.5f,   0.0f,  1.0f,  0.0f,
    -0.5f,  0.5f,  0.5f,   0.0f,  1.0f,  0.0f,
    -0.5f,  0.5f, -0.5f,   0.0f,  1.0f,  0.0f
};

const float fcpp::internal::Shapes::VERTEX_ORTHO[144] = {
    // positions              // colors
    -0.01f,  0.01f,  0.01f,   0.0f, 0.5f, 0.0f,
     0.01f,  0.01f,  0.01f,   0.0f, 0.5f, 0.0f,
     0.01f,  0.01f, -0.01f,   0.0f, 0.5f, 0.0f,
    -0.01f,  0.01f, -0.01f,   0.0f, 0.5f, 0.0f,
    -0.01f,  0.60f,  0.01f,   0.0f, 1.0f, 0.0f,
     0.01f,  0.60f,  0.01f,   0.0f, 1.0f, 0.0f,
     0.01f,  0.60f, -0.01f,   0.0f, 1.0f, 0.0f,
    -0.01f,  0.60f, -0.01f,   0.0f, 1.0f, 0.0f,

     0.01f,  0.01f,  0.01f,   0.5f, 0.0f, 0.0f,
     0.01f,  0.01f, -0.01f,   0.5f, 0.0f, 0.0f,
     0.01f, -0.01f, -0.01f,   0.5f, 0.0f, 0.0f,
     0.01f, -0.01f,  0.01f,   0.5f, 0.0f, 0.0f,
     0.60f,  0.01f,  0.01f,   1.0f, 0.0f, 0.0f,
     0.60f,  0.01f, -0.01f,   1.0f, 0.0f, 0.0f,
     0.60f, -0.01f, -0.01f,   1.0f, 0.0f, 0.0f,
     0.60f, -0.01f,  0.01f,   1.0f, 0.0f, 0.0f,

    -0.01f,  0.01f,  0.01f,   0.0f, 0.0f, 0.5f,
     0.01f,  0.01f,  0.01f,   0.0f, 0.0f, 0.5f,
     0.01f, -0.01f,  0.01f,   0.0f, 0.0f, 0.5f,
    -0.01f, -0.01f,  0.01f,   0.0f, 0.0f, 0.5f,
    -0.01f,  0.01f,  0.60f,   0.0f, 0.0f, 1.0f,
     0.01f,  0.01f,  0.60f,   0.0f, 0.0f, 1.0f,
     0.01f, -0.01f,  0.60f,   0.0f, 0.0f, 1.0f,
    -0.01f, -0.01f,  0.60f,   0.0f, 0.0f, 1.0f
};

const int fcpp::internal::Shapes::INDEX_ORTHO[108] = {
    0, 1, 2,
    2, 3, 0,
    4, 5, 6,
    6, 7, 4,
    0, 1, 4,
    4, 7, 0,
    1, 2, 5,
    5, 4, 1,
    2, 3, 6,
    6, 5, 2,
    3, 0, 7,
    7, 6, 3,

    8, 9, 10,
    10, 11, 8,
    12, 13, 14,
    14, 15, 12,
    8, 12, 15,
    15, 11, 8,
    8, 12, 13,
    13, 8, 9,
    9, 13, 10,
    10, 13, 14,
    14, 15, 10,
    10, 11, 15,

    16, 17, 18,
    18, 19, 16,
    20, 21, 22,
    22, 23, 20,
    20, 16, 17,
    17, 20, 21,
    21, 17, 18,
    18, 21, 22,
    22, 18, 19,
    19, 22, 23,
    23, 19, 16,
    16, 23, 20
};

/*
const float* fcpp::internal::Shapes::getVertex(fcpp::shape sh) {
    if (sh == shape::ortho) return Shapes::VERTEX_ORTHO;
    if (sh == shape::cube) return Shapes::VERTEX_CUBE;
    return NULL;
}

const int* fcpp::internal::Shapes::getIndex(fcpp::shape sh) {
    if (sh == shape::ortho) return Shapes::INDEX_ORTHO;
    return NULL;
}
*/